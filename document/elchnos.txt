*ELCHNOS言語仕様

*予約語
予約語は大文字小文字を区別しません。
+int
+char
+for
+if
+pまたはrの後に数値が続くものすべて（レジスタ名指定）
+バックエンドコードのニーモニック各種

*利用可能な型
-OSECPUのプリミティブ型は二種類です。
-整数型とポインタ型の変換（キャスト）はできません。
+整数型
+ポインタ型

*変数
**スコープ
-変数は関数スコープとなります。
-グローバル変数も利用できます。
**宣言形式
 [attribute] type [pointerSign][, ...];
 int x;	//32ビット符号あり整数a, b, cを宣言します。
 unsigned char a, b, c;	//8ビット符号なし整数a, b, cを宣言します。
 int p, *q, r;	//32ビット符号あり整数p, rと、32ビット符号あり整数に対するポインタqを宣言します。
 int l, m, unsigned char *n, o;	//32ビット符号あり整数l, mと、8ビット符号なし整数に対するポインタn、そして8ビット符号なし整数oを宣言します。
*演算子
**整数演算
+中置二項算術演算子
 a + b
 + - * / %
+中置二項代入・算術演算子
 a += b
 = += -= *= /= %=
+後置単項算術演算子
 a++
 ++ --
+前置単項算術演算子
 -a
 -
*関数
-関数には二つの種類があります。これは関数型言語の利点を取り入れるためで、現在はprocedureのみが利用可能です。
+procedure
+algorithm
--引数と戻り値のみをすべての環境とする第一級関数です。
--この関数の内部からprocedureを呼び出すことはできません。
--グローバル変数を利用することはできません。



